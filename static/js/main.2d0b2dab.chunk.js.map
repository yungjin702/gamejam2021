{"version":3,"sources":["reportWebVitals.js","Topnav/Topnav.js","Main/Silder.js","Main/VerticalCarousel.js","Main/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Topnav","className","href","target","src","Slider","gameName","content","icon","link","useSpring","xy","set","bind","useGesture","down","delta","velocity","clamp","config","mass","tension","friction","div","style","transform","interpolate","x","y","VerticalCarousel","state","index","modBySlidesLength","console","log","props","slides","length","moveSlide","direction","setState","goToSlide","offsetRadius","this","upperBound","Math","floor","clampOffsetRadius","presentableSlides","Array","i","push","Fragment","getPresentableSlides","map","slider","key","React","Component","defaultProps","animationConfig","Main","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d0b2dab.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./Topnav.css\";\r\n\r\nfunction Topnav() {\r\n    return (\r\n      <nav className=\"background\" >\r\n        <div className=\"topnav\">\r\n          <a className=\"leftAtt\" href=\"https://thecgawards.kro.kr\">The CG Awards</a>\r\n\r\n          <ul className=\"topnav_icon\">\r\n            <li><a className=\"Youtube\" href=\"https://www.youtube.com/channel/UCCM8oRwSn5KdywxiuLp-bfA\" target=\"_blank\">\r\n              <img src=\"youtube.svg\"></img></a></li>\r\n            <li><a className=\"Instagram\" href=\"https://www.instagram.com/kah.cg/\" target=\"_blank\">\r\n              <img src=\"instagram.svg\"></img></a></li>\r\n            \r\n          </ul>\r\n\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  \r\n  export default Topnav;\r\n  ","import React from \"react\"\r\nimport clamp from 'lodash-es/clamp'\r\nimport {useSpring, animated, interpolate} from 'react-spring'\r\nimport { useGesture, useDrag } from 'react-with-gesture'\r\nimport \"./Slider.css\"\r\n\r\n\r\nfunction Slider({\r\n    gameName,\r\n    content,\r\n    icon,\r\n    link,\r\n}){ \r\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\r\n    const bind = useGesture(({ down, delta, velocity }) => {\r\n      velocity = clamp(velocity, 1, 8)\r\n      set({ xy: down ? delta : [0, 0], config: { mass: velocity, tension: 500 * velocity, friction: 50 } })\r\n    })\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"SliderContainer\">\r\n            <animated.div className=\"SliderCard\" {...bind()} style={{ transform: xy.interpolate((x,y) => `translate3d(0,${y}px,0)`)}}>\r\n\r\n                <a className=\"gameName\">{gameName}</a>\r\n                <a className=\"context\">{content}</a>\r\n                <a className=\"icon\" href={link}>\r\n                <img className=\"img\" src={icon} ></img>\r\n                </a>\r\n            </animated.div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Slider;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Slider from \"./Silder\"\r\n\r\n\r\nclass VerticalCarousel extends React.Component{\r\n    state = {\r\n        index: 0\r\n\r\n    };\r\n\r\n    static defaultProps = {\r\n        offsetRadius: 1,\r\n        animationConfig: { tension: 120, friction: 14 }\r\n    };\r\n    \r\n    static propTypes = {\r\n        slides: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                key: PropTypes.any,\r\n                gameName: PropTypes.string,\r\n                content: PropTypes.string,\r\n                icon: PropTypes.string,\r\n                link: PropTypes.string\r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\n    modBySlidesLength = (index) => {\r\n        console.log(\"index:%d, length:%d result:%d\",index, this.props.slides.length, index % this.props.slides.length);\r\n        return index % this.props.slides.length;\r\n      };\r\n\r\n    moveSlide = (direction) => {\r\n        this.setState({\r\n          index: this.modBySlidesLength(this.state.index + direction),\r\n          goToSlide: null\r\n        });\r\n    };\r\n\r\n    clampOffsetRadius(offsetRadius) {\r\n        const { slides } = this.props;\r\n        const upperBound = Math.floor((slides.length - 1) / 2);\r\n    \r\n        if (offsetRadius < 0) {\r\n          return 0;\r\n        }\r\n        if (offsetRadius > upperBound) {\r\n          return upperBound;\r\n        }\r\n    \r\n        return offsetRadius;\r\n    }\r\n\r\n    getPresentableSlides() {\r\n        const { slides } = this.props;\r\n        const { index } = this.state;\r\n        let { offsetRadius } = this.props;\r\n        offsetRadius = this.clampOffsetRadius(offsetRadius);\r\n        const presentableSlides = new Array();\r\n\r\n        for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\r\n            presentableSlides.push(slides[this.modBySlidesLength(index + i)]);\r\n          }\r\n\r\n        console.log(presentableSlides);\r\n\r\n        return presentableSlides;\r\n      }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.getPresentableSlides().map((slider, index) => (\r\n                    <Slider \r\n                        index={index}\r\n                        key={slider.key} \r\n                        gameName={slider.gameName}\r\n                        content={slider.content} \r\n                        icon={slider.icon} \r\n                        link={slider.link}>\r\n\r\n                    </Slider>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerticalCarousel;","import React from \"react\";\r\nimport './Main.css'\r\nimport VerticalCarousel from \"./VerticalCarousel\";\r\n\r\nlet slides = [\r\n    {\r\n        key: 0,\r\n        gameName: 'Test',\r\n        content: '유신이바보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    },\r\n    {\r\n        key: 1,\r\n        gameName: 'Test1',\r\n        content: '유신이d보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    },\r\n    {\r\n        key: 2,\r\n        gameName: 'Test1',\r\n        content: '유신이d보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    }\r\n\r\n]  \r\n\r\n\r\nfunction Main(){\r\n\r\n    return ( \r\n        <div id=\"main\" className=\"main\" >\r\n            <VerticalCarousel \r\n                slides={slides}\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Topnav from './Topnav/Topnav';\nimport Main from './Main/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Topnav />\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}