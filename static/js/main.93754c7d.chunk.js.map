{"version":3,"sources":["reportWebVitals.js","Topnav/Topnav.jsx","Main/Silder.js","Main/DotNav.js","Main/VerticalCarousel.js","Main/VoteResult.js","Main/PollContent.js","Main/Poll.js","Main/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Topnav","useState","modal","setModal","className","setClassName","useEffect","href","src","id","target","style","width","onClick","withGesture","index","offsetRadius","gameName","content","link","platform","moveSlide","delta","down","animationConfig","offsetFromMiddle","distanceFactor","Math","abs","translateYoffset","translateY","console","log","to","transform","top","opacity","zIndex","config","div","DotNav","Count","moveIndex","dots","i","push","map","dot","mod","a","b","VerticalCarousel","state","componentDidMount","document","addEventListener","event","isComposing","keyCode","modBySlidesLength","props","gameInfo","length","direction","setState","number","this","upperBound","floor","clampOffsetRadius","presentableSlides","Array","Fragment","getPresentableSlides","presentIndex","key","getSlidesCount","React","Component","defaultProps","tension","friction","duration","VoteResult","data","getElementById","height","options","maintainAspectRatio","scales","xAxes","ticks","beginAtZero","display","gridLines","yAxes","fontFamily","fontStyle","fontSize","fontColor","list","name","PollContent","count","contents","half","voteGame","sheetNum","$","ajax","type","url","success","response","alert","setVoteResult","SOURCE","datas","labels","fetch","res","json","result","Content","test","datasets","label","error","showVoteResult","showVote","awardName","image","Poll","setID","useCookies","cookies","setCookie","undefined","uniqueId","newId","uuid","Main","movePage","flipped","textContent","gentle","setTimeout","onclick","GameInfo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.93754c7d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Componnent, useState, useEffect } from 'react';\r\nimport \"./Topnav.css\";\r\n\r\nconst Topnav = () => {\r\n  const [modal, setModal] = useState();\r\n  const [className, setClassName] = useState(\"layer_popup\");\r\n\r\n  const modalUp = () => {\r\n    setModal(true);\r\n  }\r\n  const modalOff = () => {\r\n    setModal(false);\r\n  }\r\n  useEffect(() => {\r\n    if (modal)\r\n      setClassName(className + ' on');\r\n    else if (modal == false)\r\n      setClassName('layer_popup');\r\n  }, [modal])\r\n\r\n\r\n\r\n  return (\r\n    <nav className=\"topnav_background\" >\r\n      <div className=\"topnav\">\r\n        <a className=\"leftAtt\" href=\"https://thecgawards.kro.kr\">\r\n          <img className=\"Title\" src=\"image/Title.png\"></img></a>\r\n\r\n        <a id=\"topnav_Button\" className=\"Button\">투표하러 가기</a>\r\n      \r\n        <ul className=\"topnav_icon\">\r\n          <li><a href=\"https://www.youtube.com/channel/UCCM8oRwSn5KdywxiuLp-bfA\" target=\"_blank\">\r\n            <img style={{width:'50px'}} src=\"image/YoutubeIcon.png\"></img></a></li>\r\n          <li><a href=\"https://www.instagram.com/kah_best_of_game/\" target=\"_blank\">\r\n            <img src=\"image/InstaIcon.png\"></img></a></li>\r\n          <li><a href=\"https://www.facebook.com/anigoGame\" target=\"_blank\">\r\n            <img src=\"image/FacebookIcon.png\"></img></a></li>\r\n        </ul>\r\n\r\n        <ul className=\"topnav_icon_small\">\r\n          <li onClick={modalUp}><a>\r\n            <img src=\"menu.svg\"></img></a></li>\r\n        </ul>\r\n\r\n      </div>\r\n      <div className={className}>\r\n        <div className=\"layer\">\r\n          <div className=\"text_area\">\r\n            <div className=\"title\">메인</div>\r\n            <div className=\"maker\">\r\n              <div className=\"human\">일호</div>\r\n              <div className=\"human\">이호</div>\r\n              <div className=\"human\">삼호</div>\r\n              <div className=\"human\">사호</div>\r\n              <div className=\"human\">사호</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"btn_area\">\r\n          </div>\r\n          <button className=\"btn_close\" onClick={modalOff}>CLOSE</button>\r\n        </div>\r\n        <div className=\"dimmed\">\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Topnav;\r\n","import React from \"react\"\r\nimport clamp from 'lodash-es/clamp'\r\nimport {useSpring, animated} from 'react-spring'\r\nimport { useGesture, withGesture } from 'react-with-gesture'\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport \"./Slider.css\"\r\n\r\n\r\nfunction Slider({\r\n    index,\r\n    offsetRadius,\r\n    gameName,\r\n    content,\r\n    platform,\r\n    link,\r\n    moveSlide,\r\n    delta,\r\n    down,\r\n    animationConfig,\r\n}){   \r\n    const offsetFromMiddle = index - offsetRadius;\r\n    const totalPresentables = 2 * offsetRadius + 1;\r\n    const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\r\n\r\n    const translateYoffset =\r\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\r\n    let translateY = 0;\r\n\r\n    if(offsetFromMiddle === 0 && down)\r\n    {\r\n        translateY += delta[1] / (offsetRadius + 1);\r\n\r\n        if(translateY < -63 )\r\n        {\r\n            moveSlide(1);\r\n            console.log('Enter');\r\n        }\r\n        if(translateY > 63)\r\n        {\r\n            moveSlide(-1);\r\n        }\r\n            \r\n      }\r\n\r\n    if (offsetFromMiddle > 0) {\r\n        translateY -= translateYoffset;\r\n    } else if (offsetFromMiddle < 0) {\r\n        translateY += translateYoffset;\r\n    }\r\n\r\n    return(\r\n        \r\n        <Spring\r\n            to={{\r\n                transform:`translate(-50%,  ${-50 + translateY}%) scale(${distanceFactor})`,\r\n                top: `${offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\r\n                    }%`,\r\n                opacity: distanceFactor * distanceFactor,\r\n                zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\r\n            }}\r\n            config={animationConfig}\r\n        >\r\n\r\n            {(style) => (\r\n                <animated.div className=\"SliderContainer\" \r\n                    style={{...style, zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)}}>\r\n                    <div className=\"SliderCard\" style={{}}>\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"GamePoster\">\r\n                                <img src=\"gamePoster/helpbee.png\"></img>\r\n                            </div>\r\n                            <div className=\"Content\">\r\n                                <a className=\"context\">{content}</a>\r\n                            </div>\r\n                            <div className=\"GameName\">\r\n                                <a className=\"gameName\">{gameName}</a>\r\n                            </div>\r\n                            \r\n                            <div className=\"Platform\">\r\n                                <a href={link}>\r\n                                    <img src={platform === \"Android\" ? 'image/AndroidIcon.png' : 'image/AndroidIcon.png'}></img>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </animated.div>\r\n            )}\r\n        </Spring>\r\n    );\r\n}\r\n\r\n\r\nexport default withGesture()(Slider);","import React from \"react\"\r\nimport \"./DotNav.css\"\r\n\r\nfunction DotNav({\r\n    Count,\r\n    index,\r\n    moveIndex\r\n}){\r\n\r\n    var dots = [];\r\n\r\n    for(var i = 0; i < Count; i++)\r\n    {\r\n        dots.push(i);\r\n    }\r\n    \r\n    return (\r\n        <ul className=\"DotNavContainer\">\r\n            {dots.map((dot, id)=>(\r\n                <li key={id} onClick={() => moveIndex(dot)} \r\n                    style={{\r\n                        transform: `translate(0%, ${Count / 2 > dot ? -(((Count / 2) - dot)  * 10) : (((Count / 2) - (Count - dot)) * 10)}%)`}}\r\n                    className={index === dot ? \"Dot_Active\" : \"Dot\"}>\r\n\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DotNav;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Slider from \"./Silder\"\r\nimport DotNav from \"./DotNav\"\r\n\r\nfunction mod(a, b) {\r\n    return ((a % b) + b) % b;\r\n  }\r\n\r\nclass VerticalCarousel extends React.Component{\r\n    state = {\r\n        index: 0\r\n        \r\n    };\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"keydown\", event => {\r\n          if (event.isComposing || event.keyCode === 229) {\r\n            return;\r\n          }\r\n          if (event.keyCode === 38) {\r\n            this.moveSlide(-1);\r\n          }\r\n          if (event.keyCode === 40) {\r\n            this.moveSlide(1);\r\n          }\r\n        });\r\n      };\r\n\r\n    static defaultProps = {\r\n        offsetRadius: 1,\r\n        animationConfig: { tension: 120, friction: 14, duration: 100 }\r\n    };\r\n    \r\n    static propTypes = {\r\n      gameInfo: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                key: PropTypes.any,\r\n                gameName: PropTypes.string,\r\n                content: PropTypes.string,\r\n                link: PropTypes.string,\r\n                platform: PropTypes.string\r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\n    modBySlidesLength = (index) => {\r\n        return mod(index, this.props.gameInfo.length);\r\n      };\r\n\r\n    clampOffsetRadius(offsetRadius) {\r\n        const { gameInfo } = this.props;\r\n        const upperBound = Math.floor((gameInfo.length - 1) / 2);\r\n    \r\n        if (offsetRadius < 0) {\r\n          return 0;\r\n        }\r\n        if (offsetRadius > upperBound) {\r\n          return upperBound;\r\n        }\r\n    \r\n        return offsetRadius;\r\n    }\r\n\r\n    moveSlide = (direction) => {\r\n        this.setState({\r\n          index: this.modBySlidesLength(this.state.index + direction)\r\n        });\r\n    };\r\n\r\n    moveIndex = (number) => {\r\n      this.setState({\r\n        index: number\r\n      });\r\n    }\r\n\r\n    getSlidesCount()\r\n    {\r\n      const { gameInfo } = this.props;\r\n      const presentableSlides = gameInfo;\r\n\r\n      return presentableSlides.length;\r\n    }\r\n\r\n    getPresentableSlides() {\r\n        const { gameInfo } = this.props;\r\n        const { index } = this.state;\r\n        let { offsetRadius } = this.props;\r\n        offsetRadius = this.clampOffsetRadius(offsetRadius);\r\n        const presentableSlides = new Array();\r\n\r\n        for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\r\n\r\n            presentableSlides.push(gameInfo[this.modBySlidesLength(index + i)]);\r\n        }\r\n\r\n        return presentableSlides;\r\n      }\r\n\r\n\r\n    render(){\r\n      const {animationConfig, offsetRadius} = this.props;\r\n        return(\r\n            <React.Fragment>\r\n              <div>\r\n                {this.getPresentableSlides().map((gameInfo, presentIndex) => (\r\n                    <Slider \r\n                        index={presentIndex}\r\n                        offsetRadius={this.clampOffsetRadius(offsetRadius)}\r\n                        key={gameInfo.key} \r\n                        gameName={gameInfo.gameName}\r\n                        content={gameInfo.content} \r\n                        platform={gameInfo.platform} \r\n                        link={gameInfo.link}\r\n                        moveSlide={this.moveSlide}\r\n                        animationConfig={animationConfig}\r\n                        >\r\n\r\n                    </Slider>\r\n                ))}\r\n                <DotNav\r\n                  Count={this.getSlidesCount()}\r\n                  index={this.state.index}\r\n                  moveIndex={this.moveIndex}\r\n                  >\r\n                    \r\n                  </DotNav>\r\n              </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerticalCarousel;","import React from 'react'\r\nimport {Bar, HorizontalBar} from 'react-chartjs-2'\r\n\r\nconst VoteResult = ({\r\n    data\r\n}) => {\r\n\r\n    if(document.getElementById('main').width <= '1300px')\r\n    {\r\n        \r\n    }\r\n\r\n    console.log(document.getElementById('main').width);\r\n    \r\n    return <div style={{width:'100%', height:'100%'}}>\r\n        <HorizontalBar\r\n            data={data}\r\n\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                            ticks: {\r\n                                beginAtZero: true,\r\n                                display: false\r\n                            },\r\n                            gridLines: {\r\n                                display: false\r\n                            },\r\n                            \r\n                        }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            display: false\r\n                        },\r\n                        ticks:{\r\n                            fontFamily: \"JS Dong Kang KR\",\r\n                            fontStyle: 'normal',\r\n                            fontSize: 15,\r\n                            fontColor: 'white'\r\n                        }\r\n                    }]\r\n                },\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default VoteResult;","import React, { Component, useState, useEffect } from 'react';\r\nimport './PollContent.css'\r\nimport $ from \"jquery\";\r\nimport {Bar, HorizontalBar} from 'react-chartjs-2'\r\nimport VoteResult from './VoteResult'\r\nimport { ThemeConsumer } from 'styled-components';\r\nimport { string } from 'prop-types';\r\nimport { Label } from 'semantic-ui-react';\r\n\r\nlet list = [\r\n    {\r\n        name: ['helpbee', 'stockmarket', 'arksung']\r\n    },\r\n    {\r\n        name: ['helpbee', 'stockmarket', 'arksung']\r\n    }\r\n]\r\n\r\n\r\nclass PollContent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            awardName: '',\r\n            sheetNum: 0,\r\n            showVote: true,\r\n            id: '',\r\n            contents: null,\r\n            count: 0,\r\n            half: 0,\r\n        } \r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.setState({\r\n            count: this.props.contents.length,\r\n            half: this.props.count / 2,\r\n        })\r\n\r\n        \r\n    };\r\n\r\n    voteGame = (id, index)=> {\r\n\r\n        console.log(this.props.sheetNum);\r\n\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: `https://script.google.com/macros/s/AKfycbwVuwa_4i617rg-Z8TssavFxz18_TGvCzV8h0g0j5lq1ACC3A8CP7gQCuErQnsbos_W/exec?sheetName=시트${this.props.sheetNum}`,\r\n            data: {\r\n              \"post_ID\": id,\r\n              \"choice\": index\r\n            },\r\n            success: function(response){\r\n                alert(\"투표 완료\");\r\n            }\r\n        });\r\n    }\r\n\r\n    setVoteResult = () => {\r\n        const SOURCE = `https://spreadsheets.google.com/feeds/list/1rl0fCsvCnAg9uWTKzztFlFd3Q2E08-zjRAeCGCd-55s/${this.props.sheetNum}/public/full?alt=json`;\r\n        const datas = new Array();\r\n        const labels = new Array();\r\n        var sum = 0;\r\n\r\n        fetch(SOURCE)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                const Content = this.props.contents;\r\n\r\n                for(var i = 0; i < Content.length; ++i)\r\n                {\r\n                    datas.push(result['feed']['entry'][0]['gsx$' + `${list[this.state.sheetNum].name[i]}`]['$t']);\r\n                    labels.push(Content[i].name);\r\n                }\r\n\r\n                console.log(labels);\r\n                console.log(datas);\r\n\r\n                this.setState({\r\n                    test:\r\n                        <VoteResult\r\n                            data={{\r\n                                labels: labels,\r\n                                datasets:[{\r\n                                    label:'투표 수',\r\n                                    data: datas,\r\n                                }]\r\n                            }}\r\n                        >\r\n                        </VoteResult>\r\n                })\r\n            },\r\n            // 주의: 컴포넌트의 실제 버그에서 발생하는 예외사항들을 넘기지 않도록 \r\n            // 에러를 \u001dcatch() 블록(block)에서 처리하기보다는 \r\n            // 이 부분에서 처리하는 것이 중요합니다.\r\n            (error) => {\r\n                    \r\n            }\r\n        )\r\n    }\r\n\r\n    showVoteResult = () =>{\r\n\r\n        this.setVoteResult();\r\n\r\n        this.setState({\r\n            showVote: !this.state.showVote,\r\n            \r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <React.Fragment>\r\n\r\n                <div className='Info'>\r\n                    <a className=\"AwardName\">{this.props.awardName}</a>\r\n                    <button onClick={() => this.showVoteResult()} className='PollState'>투표 현황</button>\r\n                </div>\r\n\r\n                {this.props.contents.map((content, index) => (\r\n                    <div className=\"PollContent\" key={index} style={this.state.showVote === true ?  {display:\"flex\"}: {display: 'none'}}>\r\n                        <div>\r\n                            <a>{content.name}</a>\r\n                            <img src={content.image}></img>\r\n                            <button onClick={() => this.voteGame(this.props.id, content.index)}>선택하기</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                \r\n                \r\n                <div className=\"VoteResult\" style={this.state.showVote === true ?  {display:\"none\"}: {display: 'flex'}}>\r\n                    {this.state.test}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollContent;","import React, { Component, useState, useEffect } from 'react';\r\nimport \"./Poll.css\"\r\nimport {v4 as uuid} from 'uuid'\r\nimport {useCookies} from 'react-cookie';\r\nimport PollContent from './PollContent';\r\n\r\n\r\nconst contents = [\r\n    {\r\n        awardName:'능지에 치명상',\r\n        content:[\r\n            {\r\n                name:'HelpBee',\r\n                index: 0,\r\n                image: \"logo512.png\"\r\n            },\r\n            {\r\n                name:'StockMarket',\r\n                index: 1,\r\n                image: \"logo512.png\"\r\n            },\r\n            {\r\n                name: \"Arksung's Epidemic\",\r\n                index: 2,\r\n                image: \"logo512.png\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        awardName:'시간순상',\r\n        content:[\r\n            {\r\n                name:'HelpBee',\r\n                index: 0,\r\n                image: \"logo512.png\"\r\n            },\r\n            {\r\n                name:'StockMarket',\r\n                index: 1,\r\n                image: \"logo512.png\"\r\n            },\r\n            {\r\n                name: \"Arksung's Epidemic\",\r\n                index: 2,\r\n                image: \"logo512.png\"\r\n            }\r\n        ]\r\n    },\r\n]\r\n\r\n\r\n\r\n\r\nfunction Poll({\r\n    content\r\n})\r\n{\r\n\r\n    const [id, setID] = useState(\"\");\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['uniqueId']);\r\n\r\n    useEffect(()=>{        \r\n\r\n        if(cookies.uniqueId !== undefined)\r\n        {\r\n            setID(cookies.uniqueId);\r\n        }\r\n        else{\r\n            const newId = uuid();\r\n            setID(newId);\r\n            setCookie('uniqueId', newId);\r\n        }\r\n    })\r\n\r\n    console.log(contents);\r\n\r\n    return(\r\n        <div className=\"Poll\">\r\n            {contents.map((content, index) => (\r\n                <div className=\"PollContainer\">\r\n\r\n                    <PollContent\r\n                        key={index}\r\n                        awardName={content.awardName}\r\n                        sheetNum={index + 1}\r\n                        id={id}\r\n                        contents={content.content}\r\n                    >\r\n                    </PollContent>\r\n\r\n                </div>\r\n             ))}  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Poll;","import React, { Component, useState} from \"react\";\r\nimport './Main.css'\r\nimport VerticalCarousel from \"./VerticalCarousel\";\r\nimport { config } from \"react-spring\";\r\nimport Topnav from \"../Topnav/Topnav\";\r\nimport Poll from \"./Poll\";\r\nimport GameInfo from \"./GameInfo\"\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            config : config.gentle,\r\n            flipped: true,\r\n        } \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        document.getElementById('Background').style.height = '100vh'; \r\n    }\r\n\r\n    movePage = () =>{\r\n        if(this.state.flipped)\r\n        {\r\n            document.getElementById('context_1').style.display = 'none';\r\n            document.getElementById('context_2').style.display = 'flex';\r\n            document.getElementById('Background').style.height = 'min-context';\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('context_1').style.display = 'flex';\r\n            document.getElementById('context_2').style.display = 'none';\r\n            document.getElementById('Background').style.height = '100vh';\r\n        }\r\n\r\n        document.getElementById('topnav_Button').textContent = this.state.flipped ? '게임 정보 보기' : '투표하러 가기'\r\n        this.setState({\r\n            flipped: !this.state.flipped\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n        setTimeout(() => {\r\n            document.getElementById('topnav_Button').onclick = this.movePage;\r\n        }, 100);\r\n\r\n        return ( \r\n            <div id=\"Background\">\r\n                <Topnav>\r\n                </Topnav>\r\n\r\n                <div id=\"main\" className=\"main\" >\r\n                    <div id=\"context_1\" className=\"GameInfo\">\r\n                        <div>\r\n                        <img className=\"LeftDeco\" src=\"image/LeftDeco.svg\"></img>\r\n                        <img className=\"RightDeco\" src=\"image/RightDeco.svg\"></img>\r\n                        </div>\r\n                   \r\n\r\n                        <VerticalCarousel\r\n                            gameInfo={GameInfo.gameInfo}\r\n                            animationConfig={config}\r\n                        />\r\n                     \r\n                    </div>\r\n                    <div id=\"context_2\" className=\"Vote\">\r\n                        <Poll>\r\n\r\n                        </Poll>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Topnav from './Topnav/Topnav.jsx'\nimport Main from './Main/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}