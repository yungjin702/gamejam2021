{"version":3,"sources":["reportWebVitals.js","Topnav/Topnav.jsx","Main/Silder.js","Main/VerticalCarousel.js","Main/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Topnav","useState","modal","setModal","className","setClassName","useEffect","href","src","onClick","withGesture","index","offsetRadius","gameName","content","icon","link","moveSlide","delta","down","animationConfig","useSpring","xy","set","offsetFromMiddle","useGesture","velocity","clamp","config","mass","tension","friction","distanceFactor","Math","abs","translateYoffset","translateY","console","log","to","transform","top","opacity","zIndex","style","div","mod","a","b","VerticalCarousel","state","componentDidMount","document","addEventListener","event","isComposing","keyCode","modBySlidesLength","props","slides","length","direction","setState","goToSlide","this","upperBound","floor","clampOffsetRadius","presentableSlides","Array","i","key","push","Fragment","getPresentableSlides","map","slider","presentIndex","React","Component","defaultProps","duration","Main","gentle","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.411eb4b7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Componnent, useState, useEffect } from 'react';\r\nimport \"./Topnav.css\";\r\n\r\nconst Topnav = () => {\r\n  const [modal, setModal] = useState();\r\n  const [className, setClassName] = useState(\"layer_popup\");\r\n\r\n  const modalUp = () => {\r\n    setModal(true);\r\n  }\r\n  const modalOff = () => {\r\n    setModal(false);\r\n  }\r\n  useEffect(() => {\r\n    if (modal)\r\n      setClassName(className + ' on');\r\n    else if (modal == false)\r\n      setClassName('layer_popup');\r\n  }, [modal])\r\n\r\n\r\n\r\n  return (\r\n    <nav className=\"background \" >\r\n      <div className=\"topnav\">\r\n        <a className=\"leftAtt\" href=\"https://thecgawards.kro.kr\">The CG Awards</a>\r\n\r\n        <ul className=\"topnav_icon\">\r\n          <li><a className=\"Youtube\">\r\n            <img src=\"youtube.svg\"></img></a></li>\r\n          <li><a className=\"Instagram\">\r\n            <img src=\"instagram.svg\"></img></a></li>\r\n        </ul>\r\n\r\n        <ul className=\"topnav_icon_small\">\r\n          <li onClick={modalUp}><a>\r\n            <img src=\"menu.svg\"></img></a></li>\r\n        </ul>\r\n\r\n      </div>\r\n      <div className={className}>\r\n        <div className=\"layer\">\r\n          <div className=\"text_area\">\r\n            <div className=\"title\">메인</div>\r\n            <div className=\"maker\">\r\n              <div className=\"human\">일호</div>\r\n              <div className=\"human\">이호</div>\r\n              <div className=\"human\">삼호</div>\r\n              <div className=\"human\">사호</div>\r\n              <div className=\"human\">사호</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"btn_area\">\r\n          </div>\r\n          <button className=\"btn_close\" onClick={modalOff}>CLOSE</button>\r\n        </div>\r\n        <div className=\"dimmed\">\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Topnav;\r\n","import React from \"react\"\r\nimport clamp from 'lodash-es/clamp'\r\nimport {useSpring, animated} from 'react-spring'\r\nimport { useGesture, withGesture } from 'react-with-gesture'\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport \"./Slider.css\"\r\n\r\n\r\nfunction Slider({\r\n    index,\r\n    offsetRadius,\r\n    gameName,\r\n    content,\r\n    icon,\r\n    link,\r\n    moveSlide,\r\n    delta,\r\n    down,\r\n    animationConfig,\r\n}){ \r\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\r\n    const bind = useGesture(({ down, delta, velocity }) => {\r\n      velocity = clamp(velocity, 1, 8)\r\n      set({ xy: down ? delta : [0, 0], config: { mass: velocity, tension: 500 * velocity, friction: 50 } })\r\n\r\n    })\r\n\r\n  \r\n    const offsetFromMiddle = index - offsetRadius;\r\n    const totalPresentables = 2 * offsetRadius + 1;\r\n    const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\r\n\r\n    const translateYoffset =\r\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\r\n    let translateY = 0;\r\n\r\n    if(offsetFromMiddle === 0 && down)\r\n    {\r\n        translateY += delta[1] / (offsetRadius + 1);\r\n        console.log(translateY);\r\n\r\n        if(translateY < -63 )\r\n        {\r\n            moveSlide(1);\r\n        }\r\n        if(translateY > 63)\r\n        {\r\n            moveSlide(-1);\r\n        }\r\n            \r\n      }\r\n\r\n    if (offsetFromMiddle > 0) {\r\n        translateY -= translateYoffset;\r\n    } else if (offsetFromMiddle < 0) {\r\n        translateY += translateYoffset;\r\n    }\r\n\r\n    return(\r\n        \r\n        <Spring\r\n            to={{\r\n                transform: `translate(-50%, ${-50 + translateY}%) scale(${distanceFactor})`,\r\n                top: `${offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\r\n                    }%`,\r\n                opacity: distanceFactor * distanceFactor,\r\n                zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\r\n            }}\r\n            config={animationConfig}\r\n        >\r\n\r\n            {(style) => (\r\n                <animated.div className=\"SliderContainer\" \r\n                    style={{...style, zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)}}>\r\n                    <animated.div className=\"SliderCard\" style={{}}>\r\n\r\n                        <a className=\"gameName\">{gameName}</a>\r\n                        <a className=\"context\">{content}</a>\r\n                        <a className=\"icon\" href={link}>\r\n                            <img className=\"img\" src={icon} ></img>\r\n                        </a>\r\n                    </animated.div>\r\n                </animated.div>\r\n            )}\r\n        </Spring>\r\n    );\r\n}\r\n\r\n\r\nexport default withGesture()(Slider);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Slider from \"./Silder\"\r\n\r\nfunction mod(a, b) {\r\n    return ((a % b) + b) % b;\r\n  }\r\n\r\nclass VerticalCarousel extends React.Component{\r\n    state = {\r\n        index: 0\r\n        \r\n    };\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"keydown\", event => {\r\n          if (event.isComposing || event.keyCode === 229) {\r\n            return;\r\n          }\r\n          if (event.keyCode === 38) {\r\n            this.moveSlide(-1);\r\n          }\r\n          if (event.keyCode === 40) {\r\n            this.moveSlide(1);\r\n          }\r\n        });\r\n      };\r\n\r\n    static defaultProps = {\r\n        offsetRadius: 1,\r\n        animationConfig: { tension: 120, friction: 14, duration: 100 }\r\n    };\r\n    \r\n    static propTypes = {\r\n        slides: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                key: PropTypes.any,\r\n                gameName: PropTypes.string,\r\n                content: PropTypes.string,\r\n                icon: PropTypes.string,\r\n                link: PropTypes.string\r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\n    modBySlidesLength = (index) => {\r\n        return mod(index, this.props.slides.length);\r\n      };\r\n\r\n    clampOffsetRadius(offsetRadius) {\r\n        const { slides } = this.props;\r\n        const upperBound = Math.floor((slides.length - 1) / 2);\r\n    \r\n        if (offsetRadius < 0) {\r\n          return 0;\r\n        }\r\n        if (offsetRadius > upperBound) {\r\n          return upperBound;\r\n        }\r\n    \r\n        return offsetRadius;\r\n    }\r\n\r\n    moveSlide = (direction) => {\r\n        this.setState({\r\n          index: this.modBySlidesLength(this.state.index + direction),\r\n          goToSlide: null\r\n        });\r\n    };\r\n\r\n    getPresentableSlides() {\r\n        const { slides } = this.props;\r\n        const { index } = this.state;\r\n        let { offsetRadius } = this.props;\r\n        offsetRadius = this.clampOffsetRadius(offsetRadius);\r\n        const presentableSlides = new Array();\r\n\r\n        for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\r\n            console.log(slides[this.modBySlidesLength(index + i)].key);\r\n            presentableSlides.push(slides[this.modBySlidesLength(index + i)]);\r\n        }\r\n\r\n        return presentableSlides;\r\n      }\r\n\r\n\r\n    render(){\r\n        const {animationConfig, offsetRadius} = this.props;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                {this.getPresentableSlides().map((slider, presentIndex) => (\r\n                    <Slider \r\n                        index={presentIndex}\r\n                        offsetRadius={this.clampOffsetRadius(offsetRadius)}\r\n                        key={slider.key} \r\n                        gameName={slider.gameName}\r\n                        content={slider.content} \r\n                        icon={slider.icon} \r\n                        link={slider.link}\r\n                        moveSlide={this.moveSlide}\r\n                        animationConfig={animationConfig}\r\n                        >\r\n\r\n                    </Slider>\r\n                ))}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerticalCarousel;","import React, {Component} from \"react\";\r\nimport './Main.css'\r\nimport VerticalCarousel from \"./VerticalCarousel\";\r\nimport { config } from \"react-spring\";\r\n\r\nlet slides = [\r\n    {\r\n        key: 0,\r\n        gameName: 'Test',\r\n        content: '유신이바보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    },\r\n    {\r\n        key: 1,\r\n        gameName: 'Test1',\r\n        content: '유신이d보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    },\r\n    {\r\n        key: 2,\r\n        gameName: 'Test2',\r\n        content: '유신이d보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    },\r\n    {\r\n        key: 3,\r\n        gameName: 'Test3',\r\n        content: '유신이d보',\r\n        icon: \"logo512.png\",\r\n        link: 'aa'  \r\n    }\r\n\r\n]  \r\n\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { config : config.gentle}  \r\n    }\r\n\r\n    render()\r\n    {\r\n        return ( \r\n            <div id=\"main\" className=\"main\" >\r\n                <VerticalCarousel \r\n                    slides={slides}\r\n                    animationConfig={this.state.config}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Topnav from './Topnav/Topnav.jsx'\nimport Main from './Main/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Topnav />\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}