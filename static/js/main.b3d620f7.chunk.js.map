{"version":3,"sources":["reportWebVitals.js","Main/Silder.js","Main/DotNav.js","Main/VerticalCarousel.js","Topnav/Topnav.jsx","Main/VoteResult.js","Main/PollContent.js","Main/Poll.js","Main/Main.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","withGesture","index","offsetRadius","gameName","content","gamePoster","link","platform","moveSlide","delta","down","animationConfig","offsetFromMiddle","distanceFactor","Math","abs","translateYoffset","translateY","console","log","to","transform","top","opacity","zIndex","config","style","div","className","src","alt","href","target","rel","DotNav","Count","moveIndex","dots","i","push","map","dot","id","onClick","mod","a","b","VerticalCarousel","state","componentDidMount","document","addEventListener","event","isComposing","keyCode","modBySlidesLength","props","gameInfo","length","direction","setState","number","this","upperBound","floor","clampOffsetRadius","presentableSlides","Array","Fragment","getPresentableSlides","presentIndex","key","getSlidesCount","React","Component","defaultProps","tension","friction","duration","Topnav","movePage","useState","modal","setModal","setClassName","modalOff","querySelector","useEffect","position","paddingTop","width","VoteResult","data","bar","$","options","maintainAspectRatio","scales","xAxes","ticks","fontFamily","fontStyle","fontSize","fontColor","gridLines","display","yAxes","beginAtZero","height","responsive","superLargeDesktop","breakpoint","max","min","items","partialVisibilityGutter","desktop","tablet","mobile","PollContent","count","contents","half","setTimeout","SOURCE","sheetNum","fetch","res","json","result","undefined","isExist","error","voteGame","alert","ajax","type","url","success","response","fail","params","setVoteResult","datas","labels","Content","AwardInfo","voteList","name","voteResult","datasets","label","backgroundColor","showVoteResult","showVote","awardName","breakPoints","itemsToShow","awardInfo","itemClass","containerClass","image","Poll","setID","useCookies","cookies","setCookie","uniqueId","newId","uuid","Main","flipped","getElementById","textContent","pageName","gentle","GameInfo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b3d620f7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\r\nimport { animated} from 'react-spring'\r\nimport { withGesture } from 'react-with-gesture'\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport \"./Slider.css\"\r\n\r\n\r\nfunction Slider({\r\n    index,\r\n    offsetRadius,\r\n    gameName,\r\n    content,\r\n    gamePoster,\r\n    platform,\r\n    link,\r\n    moveSlide,\r\n    delta,\r\n    down,\r\n    animationConfig,\r\n}){   \r\n    const offsetFromMiddle = index - offsetRadius;\r\n    const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\r\n\r\n    const translateYoffset =\r\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\r\n    let translateY = 0;\r\n\r\n    if(offsetFromMiddle === 0 && down)\r\n    {\r\n        translateY += delta[1] / (offsetRadius + 1);\r\n\r\n        if(translateY < -63 )\r\n        {\r\n            moveSlide(1);\r\n            console.log('Enter');\r\n        }\r\n        if(translateY > 63)\r\n        {\r\n            moveSlide(-1);\r\n        }\r\n            \r\n      }\r\n\r\n    if (offsetFromMiddle > 0) {\r\n        translateY -= translateYoffset;\r\n    } else if (offsetFromMiddle < 0) {\r\n        translateY += translateYoffset;\r\n    }\r\n\r\n    return(\r\n        \r\n        <Spring\r\n            to={{\r\n                transform:`translate(-50%,  ${-50 + translateY}%) scale(${distanceFactor})`,\r\n                top: `${offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\r\n                    }%`,\r\n                opacity: distanceFactor * distanceFactor,\r\n                zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\r\n            }}\r\n            config={animationConfig}\r\n        >\r\n\r\n            {(style) => (\r\n                <animated.div className=\"SliderContainer\" \r\n                    style={{...style, zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)}}>\r\n                    <div className=\"SliderCard\" style={{}}>\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"GamePoster\">\r\n                                <img src={gamePoster} alt=\"게임포스터\"></img>\r\n                            </div>\r\n                            <div className=\"Content\">\r\n                                <p className=\"context\">{content}</p>\r\n                            </div>\r\n                            <div className=\"GameName\">\r\n                                <a className=\"gameName\">{gameName}</a>\r\n                            </div>\r\n                            \r\n                            <div className=\"Platform\">\r\n                                <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n                                    <img src={platform === \"Android\" ? 'image/AndroidIcon.png' : 'image/AndroidIcon.png' } alt=\"플랫폼사진\"></img>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </animated.div>\r\n            )}\r\n        </Spring>\r\n    );\r\n}\r\n\r\n\r\nexport default withGesture()(Slider);","import React from \"react\"\r\nimport \"./DotNav.css\"\r\n\r\nfunction DotNav({\r\n    Count,\r\n    index,\r\n    moveIndex\r\n}){\r\n\r\n    var dots = [];\r\n\r\n    for(var i = 0; i < Count; i++)\r\n    {\r\n        dots.push(i);\r\n    }\r\n    \r\n    return (\r\n        <ul className=\"DotNavContainer\">\r\n            {dots.map((dot, id)=>(\r\n                <li key={id} onClick={() => moveIndex(dot)} \r\n                    style={{\r\n                        transform: `translate(0%, ${Count / 2 > dot ? -(((Count / 2) - dot)  * 10) : (((Count / 2) - (Count - dot)) * 10)}%)`}}\r\n                    className={index === dot ? \"Dot_Active\" : \"Dot\"}>\r\n\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default DotNav;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Slider from \"./Silder\"\r\nimport DotNav from \"./DotNav\"\r\nimport './VerticalCarosel.css'\r\n\r\nfunction mod(a, b) {\r\n    return ((a % b) + b) % b;\r\n  }\r\n\r\nclass VerticalCarousel extends React.Component{\r\n    state = {\r\n        index: 0\r\n        \r\n    };\r\n\r\n    componentDidMount = () => {\r\n        document.addEventListener(\"keydown\", event => {\r\n          if (event.isComposing || event.keyCode === 229) {\r\n            return;\r\n          }\r\n          if (event.keyCode === 38) {\r\n            this.moveSlide(-1);\r\n          }\r\n          if (event.keyCode === 40) {\r\n            this.moveSlide(1);\r\n          }\r\n        });\r\n      };\r\n\r\n    static defaultProps = {\r\n        offsetRadius: 1,\r\n        animationConfig: { tension: 120, friction: 14, duration: 100 }\r\n    };\r\n    \r\n    static propTypes = {\r\n      gameInfo: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                key: PropTypes.any,\r\n                gameName: PropTypes.string,\r\n                content: PropTypes.string,\r\n                link: PropTypes.string,\r\n                platform: PropTypes.string\r\n            })\r\n        ).isRequired,\r\n    };\r\n\r\n    modBySlidesLength = (index) => {\r\n        return mod(index, this.props.gameInfo.length);\r\n      };\r\n\r\n    clampOffsetRadius(offsetRadius) {\r\n        const { gameInfo } = this.props;\r\n        const upperBound = Math.floor((gameInfo.length - 1) / 2);\r\n    \r\n        if (offsetRadius < 0) {\r\n          return 0;\r\n        }\r\n        if (offsetRadius > upperBound) {\r\n          return upperBound;\r\n        }\r\n    \r\n        return offsetRadius;\r\n    }\r\n\r\n    moveSlide = (direction) => {\r\n        this.setState({\r\n          index: this.modBySlidesLength(this.state.index + direction)\r\n        });\r\n    };\r\n\r\n    moveIndex = (number) => {\r\n      this.setState({\r\n        index: number\r\n      });\r\n    }\r\n\r\n    getSlidesCount()\r\n    {\r\n      const { gameInfo } = this.props;\r\n      const presentableSlides = gameInfo;\r\n\r\n      return presentableSlides.length;\r\n    }\r\n\r\n    getPresentableSlides() {\r\n        const { gameInfo } = this.props;\r\n        const { index } = this.state;\r\n        let { offsetRadius } = this.props;\r\n        offsetRadius = this.clampOffsetRadius(offsetRadius);\r\n        const presentableSlides = new Array();\r\n\r\n        for (let i = -offsetRadius; i < 1 + offsetRadius; i++) {\r\n\r\n            presentableSlides.push(gameInfo[this.modBySlidesLength(index + i)]);\r\n        }\r\n\r\n        return presentableSlides;\r\n      }\r\n\r\n\r\n    render(){\r\n      const {animationConfig, offsetRadius} = this.props;\r\n        return(\r\n            <React.Fragment>\r\n              <div>\r\n                  {this.getPresentableSlides().map((gameInfo, presentIndex) => (\r\n                    <Slider\r\n                      index={presentIndex}\r\n                      offsetRadius={this.clampOffsetRadius(offsetRadius)}\r\n                      key={gameInfo.key}\r\n                      gameName={gameInfo.gameName}\r\n                      content={gameInfo.content}\r\n                      gamePoster={gameInfo.gamePoster}\r\n                      platform={gameInfo.platform}\r\n                      link={gameInfo.link}\r\n                      moveSlide={this.moveSlide}\r\n                      animationConfig={animationConfig}\r\n                    >\r\n\r\n                    </Slider>\r\n                  ))}\r\n\r\n                <div className=\"DotBackground\">\r\n                  <div className=\"DotIndicator\">\r\n                    <DotNav\r\n                      Count={this.getSlidesCount()}\r\n                     index={this.state.index}\r\n                      moveIndex={this.moveIndex}\r\n                    >\r\n                    </DotNav>\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VerticalCarousel;","import React, {  useState, useEffect } from 'react';\r\nimport \"./Topnav.css\";\r\n\r\nconst Topnav = ({\r\n  movePage\r\n}) => {\r\n  const [modal, setModal] = useState();\r\n  const [className, setClassName] = useState(\"layer_popup\");\r\n  const div = document.querySelector(\"#main\");\r\n\r\n  const modalUp = () => {\r\n    setModal(true);\r\n  }\r\n  const modalOff = () => {\r\n    setModal(false);\r\n  }\r\n  useEffect(() => {\r\n    if (modal)\r\n      setClassName(className + ' on');\r\n    else if (modal === false)\r\n      setClassName('layer_popup');\r\n  }, [modal])\r\n\r\n\r\n\r\n  return (\r\n    <nav className=\"topnav_background\" >\r\n      <div className=\"topnav\">\r\n        <a className=\"leftAtt\" href=\"https://thecgawards.kro.kr\">\r\n          <img className=\"Title\" src=\"https://i.ibb.co/PgvXNBc/Title.png\" alt=\"타이틀\"></img>\r\n          <img className=\"Logo\" src=\"https://i.ibb.co/vHsCWmY/logo.png\" alt=\"로고\"></img>\r\n          </a>\r\n\r\n        <div onClick={() => movePage(null)} className=\"Button\">\r\n          <a id=\"topnav_Button\">투표하러 가기</a>\r\n          <img style={{position:\"absolute\"}}src=\"https://i.ibb.co/Nn89gYh/Scroll-button.png\"></img>\r\n          </div>\r\n      \r\n        <ul className=\"topnav_icon\">\r\n          <li><a href=\"https://www.youtube.com/channel/UCCM8oRwSn5KdywxiuLp-bfA\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img className=\"Youtube\" src=\"https://i.ibb.co/q0yMty0/Youtube-Icon.png\" alt=\"유튜브아이콘\"></img></a></li>\r\n          <li><a href=\"https://www.instagram.com/kah_best_of_game/\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img src=\"https://i.ibb.co/J373CBQ/Insta-Icon.png\" alt=\"인스타아이콘\"></img></a></li>\r\n          <li><a href=\"https://www.facebook.com/anigoGame\" target=\"_blank\" rel=\"noreferrer\">\r\n            <img src=\"https://i.ibb.co/7r6Xkx9/Facebook-Icon.png\" alt=\"페이스북아이콘\"></img></a></li>\r\n        </ul>\r\n\r\n        <ul className=\"topnav_icon_small\">\r\n          <li onClick={modalUp}>\r\n            <img src=\"menu.svg\"></img></li>\r\n        </ul>\r\n\r\n      </div>\r\n      <div className={className}>\r\n        <div className=\"layer\">\r\n          <div className=\"menu_bar\">\r\n            <ul className=\"menu_item\">\r\n              <li> \r\n                <a className=\"link\" onClick={() => {movePage(1); modalOff();}}>게임 정보</a> \r\n              </li>\r\n              <li> \r\n                <a className=\"link\" onClick={() => {movePage(2); modalOff();}}>투표 하기</a> \r\n              </li>\r\n              <li style={{paddingTop: '20px'}}> \r\n                <a href=\"https://www.youtube.com/channel/UCCM8oRwSn5KdywxiuLp-bfA\" target=\"_blank\" rel=\"noreferrer\">\r\n                  <img style={{ width: '50px' }} src=\"https://i.ibb.co/q0yMty0/Youtube-Icon.png\"></img></a>\r\n                <a href=\"https://www.instagram.com/kah_best_of_game/\" target=\"_blank\" rel=\"noreferrer\">\r\n                  <img src=\"https://i.ibb.co/J373CBQ/Insta-Icon.png\"></img></a>\r\n                <a href=\"https://www.facebook.com/anigoGame\" target=\"_blank\" rel=\"noreferrer\">\r\n                  <img src=\"https://i.ibb.co/7r6Xkx9/Facebook-Icon.png\"></img></a>\r\n              </li>\r\n\r\n              <li style={{paddingTop:'20px'}}>\r\n                <p>만든 사람</p>\r\n              </li>\r\n              <li> <a>웹 개발: 20기 박영진</a> </li>\r\n              <li> <a>디자인: 20기 이지민</a> </li>\r\n            </ul>\r\n           \r\n          </div>\r\n          <div className=\"btn_area\">\r\n          </div>\r\n          <button className=\"btn_close\" onClick={modalOff}>CLOSE</button>\r\n        </div>\r\n        <div className=\"dimmed\">\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Topnav;\r\n","import React from 'react'\r\nimport {Bar, HorizontalBar} from 'react-chartjs-2';\r\nimport $ from \"jquery\";\r\n\r\nconst VoteResult = ({\r\n    data,\r\n    bar\r\n}) => {\r\n    const div = document.querySelector(\"#main\");\r\n\r\n    if($(div).width() <= 900)\r\n    {\r\n        bar = <Bar\r\n        data={data}\r\n\r\n        options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                xAxes: [{\r\n                    ticks: {\r\n                        fontFamily: \"JS Dong Kang KR\",\r\n                        fontStyle: 'normal',\r\n                        fontSize: 14,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines: {\r\n                        display: false\r\n                    },\r\n                }],\r\n                yAxes: [{\r\n                    gridLines: {\r\n                        display: false,\r\n                    },\r\n                    ticks: {\r\n                        display: false,\r\n                        beginAtZero: true,\r\n                    },\r\n                }]\r\n            },\r\n        }}\r\n    />\r\n    }\r\n    else{\r\n        bar = <HorizontalBar\r\n            data={data}\r\n\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    xAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true,\r\n                            display: false\r\n                        },\r\n                        gridLines: {\r\n                            display: false\r\n                        },\r\n                    }],\r\n                    yAxes: [{\r\n                        gridLines: {\r\n                            display: false\r\n                        },\r\n                        ticks: {\r\n                            fontFamily: \"JS Dong Kang KR\",\r\n                            fontStyle: 'normal',\r\n                            fontSize: 15,\r\n                            fontColor: 'white'\r\n                        },\r\n                    }]\r\n                },\r\n            }}\r\n        />\r\n    }\r\n\r\n    console.log();\r\n\r\n    return <div style={{width:'100%', height:'100%'}}>\r\n        {bar}\r\n    </div>\r\n}\r\n\r\nexport default VoteResult;","import React from 'react';\r\nimport './PollContent.css'\r\nimport $ from \"jquery\";\r\nimport VoteResult from './VoteResult'\r\nimport Carousel from 'react-multi-carousel'\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport AwardInfo from './AwardInfo.json'\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5,\r\n      partialVisibilityGutter: 100\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 900 },\r\n      items: 3,\r\n      partialVisibilityGutter: 100\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 900, min: 600 },\r\n      items: 2,\r\n      partialVisibilityGutter: 100\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 600, min: 0 },\r\n      items: 1,\r\n      partialVisibilityGutter: 100\r\n    }\r\n  };\r\n\r\n\r\nclass PollContent extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            awardName: '',\r\n            sheetNum: 0,\r\n            showVote: true,\r\n            isExist: 0,\r\n            id: '',\r\n            contents: null,\r\n            count: 0,\r\n            half: 0,\r\n            breakPoints: [\r\n                { width: 400, itemsToShow: 1 },\r\n                { width: 600, itemsToShow: 2 },\r\n                { width: 900, itemsToShow: 5 }\r\n            ],\r\n        } \r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        this.setState({\r\n            count: this.props.contents.length,\r\n            half: this.props.count / 2,\r\n        })\r\n\r\n        setTimeout(() => {\r\n            const SOURCE = `https://spreadsheets.google.com/feeds/list/1rl0fCsvCnAg9uWTKzztFlFd3Q2E08-zjRAeCGCd-55s/${this.props.sheetNum}/public/full?alt=json&sq=postid=${this.props.id}`;\r\n\r\n            fetch(SOURCE)\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n\r\n                        if (result['feed']['entry'] !== undefined) {\r\n                            console.log(\"ads\");\r\n\r\n                            this.setState({\r\n                                isExist: 1\r\n                            })\r\n                        }\r\n                    },\r\n                    // 주의: 컴포넌트의 실제 버그에서 발생하는 예외사항들을 넘기지 않도록 \r\n                    // 에러를 \u001dcatch() 블록(block)에서 처리하기보다는 \r\n                    // 이 부분에서 처리하는 것이 중요합니다.\r\n                    (error) => {\r\n                        this.setState({\r\n                            isExist: 2\r\n                        })\r\n                    }\r\n                )\r\n        }, 100);\r\n    };\r\n\r\n    voteGame = (id, index)=> {\r\n\r\n        console.log(this.state.isExist);\r\n\r\n        if(this.state.isExist === 0)\r\n        {\r\n            alert(\"투표 중입니다.\");\r\n\r\n            this.setState({\r\n                isExist: 1\r\n            })\r\n\r\n            $.ajax({\r\n                type: \"GET\",\r\n                url: `https://script.google.com/macros/s/AKfycbwVuwa_4i617rg-Z8TssavFxz18_TGvCzV8h0g0j5lq1ACC3A8CP7gQCuErQnsbos_W/exec?sheetName=시트${this.props.sheetNum}`,\r\n                data: {\r\n                  \"post_ID\": id,\r\n                  \"choice\": index\r\n                },\r\n                success: function(response){\r\n                    alert(\"투표 완료\");\r\n                },\r\n                fail: function (params) {\r\n                    alert(\"새로고침 후 다시 시도해주세요\");\r\n                }\r\n            });\r\n        }\r\n        else if(this.state.isExist === 1){\r\n            alert(\"이미 투표하셨습니다\");\r\n        }\r\n        else{\r\n            alert(\"새로고침 후 다시 시도해주세요\");\r\n        }\r\n    }\r\n\r\n    setVoteResult = () => {\r\n        const SOURCE = `https://spreadsheets.google.com/feeds/list/1rl0fCsvCnAg9uWTKzztFlFd3Q2E08-zjRAeCGCd-55s/${this.props.sheetNum}/public/full?alt=json`;\r\n        const datas = new Array();\r\n        const labels = new Array();\r\n\r\n        fetch(SOURCE)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                const Content = this.props.contents;\r\n\r\n                for(var i = 0; i < Content.length; ++i)\r\n                {\r\n                    console.log(AwardInfo.voteList[this.state.sheetNum].name[i]);\r\n                    datas.push(result['feed']['entry'][0]['gsx$' + `${AwardInfo.voteList[this.props.sheetNum - 1].name[i]}`]['$t']);\r\n                    \r\n                    labels.push(Content[i].name);\r\n                }\r\n\r\n                console.log(labels);\r\n                console.log(datas);\r\n\r\n                this.setState({\r\n                    voteResult:\r\n                        <VoteResult\r\n                            data={{\r\n                                labels: labels,\r\n                                datasets:[{\r\n                                    label:'투표 수',\r\n                                    data: datas,\r\n                                    backgroundColor: 'rgba(224, 39, 19, 0.6)',\r\n                                }]\r\n                            }}\r\n                        >\r\n                        </VoteResult>\r\n                })\r\n            },\r\n            // 주의: 컴포넌트의 실제 버그에서 발생하는 예외사항들을 넘기지 않도록 \r\n            // 에러를 \u001dcatch() 블록(block)에서 처리하기보다는 \r\n            // 이 부분에서 처리하는 것이 중요합니다.\r\n            (error) => {\r\n                    \r\n            }\r\n        )\r\n    }\r\n\r\n    showVoteResult = () =>{\r\n\r\n        this.setVoteResult();\r\n\r\n        this.setState({\r\n            showVote: !this.state.showVote,\r\n            \r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className='Info'>\r\n                    <a className=\"AwardName\">{this.props.awardName}</a>\r\n                    <button onClick={() => this.showVoteResult()} className='PollState'></button>\r\n                    <a className=\"AwardInfo\">{this.props.awardInfo}</a>\r\n                </div>\r\n\r\n                <div className='voteSelect' style={this.state.showVote === true ?  {display:\"flex\"}: {display: 'none'}}>\r\n                    <Carousel itemClass='carousel-item' containerClass='carousel-container' responsive={responsive} >\r\n                        {this.props.contents.map((content, index) => (\r\n                            <div className=\"PollContent\" key={index}>\r\n                                <div>\r\n                                    <a>{content.name}</a>\r\n                                    <img src={content.image}></img>\r\n                                    <button type=\"button\" onClick={() => this.voteGame(this.props.id, content.index)}></button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Carousel>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"VoteResult\" style={this.state.showVote === true ?  {display:\"none\"}: {display: 'flex'}}>\r\n                    {this.state.voteResult}\r\n                </div>\r\n\r\n                <div className=\"TopLine\">\r\n                    <img src=\"image/vote_Line.svg\"></img>\r\n                </div>\r\n\r\n                <div className=\"BottomLine\">\r\n                    <img src=\"image/vote_Line.svg\"></img>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PollContent;","import React, { useState, useEffect } from 'react';\r\nimport \"./Poll.css\"\r\nimport {v4 as uuid} from 'uuid'\r\nimport {useCookies} from 'react-cookie';\r\nimport PollContent from './PollContent';\r\nimport AwardInfo from './AwardInfo.json'\r\n\r\n\r\nfunction Poll({\r\n    content\r\n})\r\n{\r\n    const [id, setID] = useState(\"\");\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies(['uniqueId']);\r\n\r\n    useEffect(()=>{        \r\n\r\n        if(cookies.uniqueId !== undefined)\r\n        {\r\n            setID(cookies.uniqueId);\r\n        }\r\n        else{\r\n            const newId = uuid();\r\n            setID(newId);\r\n            setCookie('uniqueId', newId);\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div className=\"Poll\">\r\n            {AwardInfo.contents.map((content, index) => (\r\n                <div className=\"PollContainer\" key={\"PollContainer\" + index}>\r\n                    \r\n                    <PollContent\r\n                        key={\"PollContent\" + index}\r\n                        awardName={content.awardName}\r\n                        awardInfo={content.awardInfo}\r\n                        sheetNum={content.sheetNum}\r\n                        id={id}\r\n                        contents={content.content}\r\n                    >\r\n                    </PollContent>\r\n\r\n                </div>\r\n             ))}  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Poll;","import React, { Component } from \"react\";\r\nimport './Main.css'\r\nimport VerticalCarousel from \"./VerticalCarousel\";\r\nimport { config } from \"react-spring\";\r\nimport Topnav from \"../Topnav/Topnav\";\r\nimport Poll from \"./Poll\";\r\nimport GameInfo from \"./GameInfo\"\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            config : config.gentle,\r\n            flipped: false,\r\n        } \r\n    }\r\n\r\n    movePage = () =>{\r\n\r\n        if(this.state.flipped)\r\n        {\r\n            document.getElementById('context_1').style.display = 'none';\r\n            document.getElementById('context_2').style.display = 'flex';\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('context_1').style.display = 'flex';\r\n            document.getElementById('context_2').style.display = 'none';\r\n        }\r\n\r\n        document.getElementById('topnav_Button').textContent = this.state.flipped ? '게임 정보 보기' : '투표하러 가기'\r\n        this.setState({\r\n            flipped: !this.state.flipped\r\n        });\r\n    }\r\n\r\n    movePage = (pageName) =>{\r\n        if(pageName !== null)\r\n        {\r\n            this.setState({\r\n                flipped: pageName === 1 ? false : true \r\n            });\r\n        }\r\n        else\r\n        {\r\n            document.getElementById('topnav_Button').textContent = !this.state.flipped ? '게임 정보 보기' : '투표하러 가기'\r\n            this.setState({\r\n                flipped: !this.state.flipped\r\n            });\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return ( \r\n            <div id=\"Background\" className=\"background\">\r\n                <Topnav\r\n                    movePage={this.movePage}\r\n                >\r\n                </Topnav>\r\n\r\n                <div id=\"main\" className=\"main\" >\r\n                    <div id=\"context_1\" className=\"GameInfo\" \r\n                        style={this.state.flipped ? {display:\"none\"} : {display:\"flex\"}}>\r\n\r\n                        <div>\r\n                            <img className=\"LeftDeco\" src=\"image/LeftDeco.svg\" alt=\"왼쪽데코\"></img>\r\n                            <img className=\"RightDeco\" src=\"image/RightDeco.svg\" alt=\"오른쪽데코\"></img>\r\n                        </div>\r\n                   \r\n\r\n                        <VerticalCarousel\r\n                            gameInfo={GameInfo.gameInfo}\r\n                            animationConfig={config}\r\n                        />\r\n                     \r\n                    </div>\r\n                    <div id=\"context_2\" className=\"Vote\" \r\n                        style={this.state.flipped ? {display:\"flex\"} : {display:\"none\"}}>\r\n                        <Poll>\r\n\r\n                        </Poll>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './Main/Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}